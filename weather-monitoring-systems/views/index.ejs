<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Weather Monitoring</title>
    <!-- Link to styles -->
    <link rel="stylesheet" href="/css/styles.css">
    <!-- Link to Chart.js from CDN -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        /* Global Styles */
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f5f5f5;
            margin: 0;
            padding: 0;
            color: #333;
        }

        h1 {
            text-align: center;
            margin: 20px 0;
            color: #333;
            font-size: 3.5em;
            text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.2);
        }

        .weather-container {
            display: flex;
            justify-content: center;
            flex-wrap: wrap;
            padding: 20px;
        }

        /* Weather Card Styles */
        .weather-card {
            border: 1px solid #ddd;
            padding: 15px;
            width: 250px;
            margin: 15px;
            text-align: center;
            border-radius: 8px;
            background-color: #ffffff;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            transition: transform 0.2s, box-shadow 0.2s;
        }

        .weather-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
            animation: rotate-center 0.6s ease-in-out both;
        }

        .weather-card h2 {
            font-size: 1.8em;
            color: #007BFF;
            margin-bottom: 10px;
        }

        .weather-card p {
            margin: 5px 0;
            font-size: 1em;
            color: #555;
        }

        .chart-container {
            display: flex;
            justify-content: center;
            margin-top: 40px;
        }

        .chart-wrapper {
            position: relative;
            width: 400px; /* Adjust size as needed */
            height: 400px; /* Adjust size as needed */
            margin: 0 auto;
            border: 1px solid #ddd;
            border-radius: 8px;
            background-color: #ffffff;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        /* Media Queries */
        @media (max-width: 768px) {
            .weather-container {
                flex-direction: column;
                align-items: center;
            }

            .weather-card {
                width: 90%;
            }
        }

        @media (max-width: 480px) {
            h1 {
                font-size: 2em;
            }

            .weather-card {
                width: 100%;
            }

            .weather-card h2 {
                font-size: 1.5em;
            }
        }
    </style>
</head>
<body>
    <h1>Weather Monitoring System</h1>
    <div class="weather-container">
        <% weatherData.forEach(weather => { %>
            <div class="weather-card">
                <h2><%= weather.city %></h2>
                <p>Main Condition: <%= weather.main %></p>
                <p>Temperature: <%= weather.temperature %>째C</p>
                <p>Feels Like: <%= weather.feels_like %>째C</p>
                <p>Last Update: <%= weather.dt %></p>
            </div>
        <% }); %>
    </div>
    <!-- Dropdowns for city and chart selection -->
    <div class="dropdown-container" style="text-align: center; margin-top: 20px;">
        <label for="cityDropdown">Select City:</label>
        <select id="cityDropdown" class="styled-dropdown">
            <option value="" disabled selected>Select a city</option>
            <% weatherData.forEach(weather => { %>
                <option value="<%= weather.city %>"><%= weather.city %></option>
            <% }); %>
        </select>

        <label for="chartTypeDropdown">Select Chart Type:</label>
        <select id="chartTypeDropdown" class="styled-dropdown">
            <option value="" disabled selected>Select chart type</option>
            <option value="bar">Bar Chart</option>
            <option value="pie">Pie Chart</option>
        </select>
    </div>

    <!-- Chart button -->
    <center><button id="generateChartBtn">Generate Chart</button></center>
    
    <!-- Area to display fetched data -->
    <div id="outputArea" style="text-align: center;"></div>

    <!-- Chart container -->
    <div class="chart-container" id="chartContainer" style="display:none;">
        <div class="chart-wrapper">
            <canvas id="weatherChart"></canvas>
        </div>
    </div>

    <!-- Script for handling chart generation and data fetching -->
    <script>
        let weatherChart; // Variable to hold the chart instance
    
        document.getElementById('generateChartBtn').addEventListener('click', () => {
            const city = document.getElementById('cityDropdown').value;
            const chartType = document.getElementById('chartTypeDropdown').value;
    
            if (city && chartType) {
                generateChart(city, chartType);
            } else {
                alert('Please select both a city and a chart type.');
            }
        });
    
        function generateChart(city, chartType) {
            // Clear the output area before fetching new data
            const outputArea = document.getElementById('outputArea');
            outputArea.innerHTML = '';
    
            // Fetch data from API
            fetch(`/api/weather?city=${city}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok ' + response.statusText);
                    }
                    return response.json();
                })
                .then(data => {
                    // Display fetched data
                    outputArea.innerHTML = `
                        <h3>Weather Data for ${city}</h3>
                        <p>Temperature: ${data.temperature}째C</p>
                        <p>Feels Like: ${data.feels_like}째C</p>
                        <p>Humidity: ${data.humidity}%</p>
                        <p>Wind Speed: ${data.wind_speed} m/s</p>
                        <p>Chart Type: ${chartType}</p>
                    `;
    
                    // Prepare data for chart
                    const chartData = {
                        labels: ['Temperature', 'Feels Like', 'Humidity', 'Wind Speed'],
                        datasets: [{
                            label: `Weather Data for ${city}`,
                            data: [data.temperature, data.feels_like, data.humidity, data.wind_speed],
                            backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0'],
                        }]
                    };
    
                    // Get the canvas context
                    const ctx = document.getElementById('weatherChart').getContext('2d');
    
                    // Clear previous chart if any
                    if (weatherChart) {
                        weatherChart.destroy(); // Destroy previous chart instance
                    }
    
                    // Create and render the chart
                    weatherChart = new Chart(ctx, {
                        type: chartType,
                        data: chartData,
                        options: {
                            responsive: true,
                            plugins: {
                                legend: {
                                    position: 'top',
                                },
                                title: {
                                    display: true,
                                    text: `Weather Data for ${city}`
                                }
                            }
                        }
                    });
    
                    // Show the chart container
                    document.getElementById('chartContainer').style.display = 'flex';
                })
                .catch(error => {
                    console.error('Error fetching weather data:', error);
                    outputArea.innerHTML = `<p style="color:red;">Error fetching data for ${city}</p>`;
                });
        }
    </script>
    <!-- Include local chart.js file -->
    <script src="/js/chart.js"></script>
</body>
</html>
